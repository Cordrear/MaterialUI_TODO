{"version":3,"sources":["components/TaskList/TaskListItem/TaskListItem.jsx","components/TaskList/TaskList.jsx","App.js","index.js"],"names":["TaskListItem_TaskListItem","props","position","onCheck","onEdit","onMove","_props$data","data","id","title","date","checked","daysLeft","moment","diff","expirationClass","react_default","a","createElement","index_es","key","className","onClick","primary","secondary","disabled","icons_index_es","TaskList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onCreate","setState","isTaskDialogOpen","editableItemId","closeDialog","titleInputValue","dateInputValue","format","descriptionInputValue","onSave","_this$state","state","item","Date","now","description","newData","deepClone","find","task","assign","updateLocalStorage","concat","toConsumableArray","localStorage","setItem","JSON","stringify","handleChange","name","event","defineProperty","target","value","resetDialogState","parse","direction","index","findIndex","_ref","length","_ref2","dialogTitle","getItem","_this2","_this$state2","Fragment","variant","color","size","map","open","onClose","label","onChange","type","required","multiline","fullWidth","rowsMax","React","Component","App","components_TaskList_TaskList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.48d318c6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./TaskListItem.css\";\r\nimport { ListItem, Checkbox, ListItemText, Button } from \"@material-ui/core\";\r\nimport {\r\n    Edit as EditIcon,\r\n    KeyboardArrowDown as DownIcon,\r\n    KeyboardArrowUp as UpIcon,\r\n} from \"@material-ui/icons\";\r\nimport moment from \"moment\";\r\n\r\nexport default (props) => {\r\n    const { position, onCheck, onEdit, onMove } = props;\r\n    const { id, title, date, checked } = props.data;\r\n    const deadline = moment(date);\r\n    const daysLeft = deadline.diff(moment(), \"days\");\r\n    let expirationClass = \"common\";\r\n    if (daysLeft < 0) {\r\n        expirationClass = \"expired\";\r\n    } else if (daysLeft < 3) {\r\n        expirationClass = \"upcoming\";\r\n    }\r\n    return (\r\n        <ListItem key={id} className={!checked ? expirationClass : \"completed\"}>\r\n            <Checkbox checked={checked} onClick={onCheck} />\r\n            <ListItemText primary={title} className=\"list-item_title\" />\r\n            <ListItemText secondary={date} />\r\n            <Button\r\n                className=\"button\"\r\n                onClick={() => onMove(id, \"down\")}\r\n                disabled={position === \"last\"}\r\n            >\r\n                <DownIcon />\r\n            </Button>\r\n            <Button\r\n                className=\"button\"\r\n                onClick={() => onMove(id, \"up\")}\r\n                disabled={position === \"first\"}\r\n            >\r\n                <UpIcon />\r\n            </Button>\r\n            <Button className=\"button\" onClick={onEdit}>\r\n                <EditIcon />\r\n            </Button>\r\n        </ListItem>\r\n    );\r\n};\r\n","import React from \"react\";\r\nimport \"./TaskList.css\";\r\nimport {\r\n    Paper,\r\n    Button,\r\n    List,\r\n    Dialog,\r\n    DialogTitle,\r\n    DialogContent,\r\n    DialogActions,\r\n    TextField,\r\n} from \"@material-ui/core\";\r\nimport TaskListItem from \"./TaskListItem/TaskListItem\";\r\nimport moment from \"moment\";\r\n\r\nclass TaskList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            data: [],\r\n            isTaskDialogOpen: false,\r\n            titleInputValue: \"\",\r\n            dateInputValue: moment().format(\"YYYY-MM-DD\"),\r\n            descriptionInputValue: \"\",\r\n            dialogTitle: \"\",\r\n            editableItemId: \"\",\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        const data = JSON.parse(localStorage.getItem(\"data\")) || [];\r\n        this.setState({ data });\r\n    }\r\n\r\n    onCreate = () => {\r\n        this.setState({\r\n            isTaskDialogOpen: true,\r\n            editableItemId: \"\",\r\n        });\r\n    };\r\n\r\n    closeDialog = () => {\r\n        this.setState({\r\n            isTaskDialogOpen: false,\r\n            titleInputValue: \"\",\r\n            dateInputValue: moment().format(\"YYYY-MM-DD\"),\r\n            descriptionInputValue: \"\",\r\n        });\r\n    };\r\n\r\n    onSave = () => {\r\n        const {\r\n            titleInputValue,\r\n            descriptionInputValue,\r\n            dateInputValue,\r\n            data,\r\n            editableItemId,\r\n        } = this.state;\r\n        const item = {\r\n            id: editableItemId || Date.now(),\r\n            title: titleInputValue,\r\n            date: dateInputValue,\r\n            description: descriptionInputValue,\r\n            checked: false,\r\n        };\r\n        if (editableItemId) {\r\n            const newData = this.deepClone(this.state.data);\r\n            const item = newData.find((task) => task.id === editableItemId);\r\n            Object.assign(item, {\r\n                title: titleInputValue,\r\n                date: dateInputValue,\r\n                description: descriptionInputValue,\r\n            });\r\n            this.setState({ data: newData }, this.updateLocalStorage);\r\n        } else {\r\n            this.setState(\r\n                {\r\n                    data: [item, ...data],\r\n                },\r\n                this.updateLocalStorage\r\n            );\r\n        }\r\n        this.closeDialog();\r\n    };\r\n\r\n    onEdit = (id) => {\r\n        const item = this.state.data.find((task) => task.id === id);\r\n        this.setState({\r\n            editableItemId: id,\r\n            titleInputValue: item.title,\r\n            dateInputValue: item.date,\r\n            descriptionInputValue: item.description,\r\n            isTaskDialogOpen: true,\r\n        });\r\n    };\r\n\r\n    updateLocalStorage = () => {\r\n        localStorage.setItem(\"data\", JSON.stringify(this.state.data));\r\n    };\r\n\r\n    handleChange = (name) => (event) => {\r\n        this.setState({\r\n            [name]: event.target.value,\r\n        });\r\n    };\r\n\r\n    resetDialogState = () => {\r\n        this.setState({\r\n            titleInputValue: \"\",\r\n            dateInputValue: moment().format(\"YYYY-MM-DD\"),\r\n            descriptionInputValue: \"\",\r\n        });\r\n    };\r\n\r\n    deepClone = (data) => {\r\n        return JSON.parse(JSON.stringify(data));\r\n    };\r\n\r\n    onCheck = (id) => {\r\n        const newData = this.deepClone(this.state.data);\r\n        const item = newData.find((task) => task.id === id);\r\n        item.checked = !item.checked;\r\n        this.setState({ data: newData }, this.updateLocalStorage);\r\n    };\r\n\r\n    onMove = (id, direction) => {\r\n        const data = this.deepClone(this.state.data);\r\n        const index = data.findIndex((task) => task.id === id);\r\n        if (direction === \"up\") {\r\n            if (index !== 0) {\r\n                [data[index - 1], data[index]] = [data[index], data[index - 1]];\r\n            }\r\n        } else {\r\n            if (index !== this.state.data.length - 1) {\r\n                [data[index], data[index + 1]] = [data[index + 1], data[index]];\r\n            }\r\n        }\r\n        this.setState({ data }, this.updateLocalStorage);\r\n    };\r\n\r\n    render() {\r\n        const {\r\n            data,\r\n            isTaskDialogOpen,\r\n            titleInputValue,\r\n            descriptionInputValue,\r\n            dateInputValue,\r\n        } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Paper className=\"main\">\r\n                    <Button\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        size=\"medium\"\r\n                        className=\"add-new-task\"\r\n                        onClick={this.onCreate}\r\n                    >\r\n                        Добавить\r\n                    </Button>\r\n                    <List className=\"list\">\r\n                        {data.map((item, index) => (\r\n                            <TaskListItem\r\n                                data={item}\r\n                                key={item.id}\r\n                                onCheck={() => this.onCheck(item.id)}\r\n                                onEdit={() => this.onEdit(item.id)}\r\n                                onMove={this.onMove}\r\n                                position={\r\n                                    index === 0\r\n                                        ? \"first\"\r\n                                        : index === data.length - 1\r\n                                        ? \"last\"\r\n                                        : \"middle\"\r\n                                }\r\n                            />\r\n                        ))}\r\n                    </List>\r\n                </Paper>\r\n                <Dialog\r\n                    open={isTaskDialogOpen}\r\n                    onClose={this.closeDialog}\r\n                    className=\"dialog\"\r\n                >\r\n                    <DialogTitle className=\"task-dialog-header\">\r\n                        {this.state.editableItemId\r\n                            ? \"Редактирование\"\r\n                            : \"Создание\"}\r\n                    </DialogTitle>\r\n                    <DialogContent>\r\n                        <div className=\"title-and-date\">\r\n                            <TextField\r\n                                label=\"Заголовок\"\r\n                                variant=\"outlined\"\r\n                                className=\"title-input\"\r\n                                value={titleInputValue}\r\n                                onChange={this.handleChange(\"titleInputValue\")}\r\n                            />\r\n                            <TextField\r\n                                label=\"Deadline\"\r\n                                variant=\"outlined\"\r\n                                type=\"date\"\r\n                                value={dateInputValue}\r\n                                onChange={this.handleChange(\"dateInputValue\")}\r\n                                required\r\n                            />\r\n                        </div>\r\n                        <TextField\r\n                            multiline\r\n                            fullWidth\r\n                            label=\"Описание\"\r\n                            variant=\"outlined\"\r\n                            value={descriptionInputValue}\r\n                            onChange={this.handleChange(\r\n                                \"descriptionInputValue\"\r\n                            )}\r\n                            rowsMax={6}\r\n                        />\r\n                    </DialogContent>\r\n                    <DialogActions>\r\n                        <Button color=\"secondary\" onClick={this.closeDialog}>\r\n                            Отмена\r\n                        </Button>\r\n                        <Button color=\"primary\" onClick={this.onSave}>\r\n                            Сохранить\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport TaskList from \"./components/TaskList/TaskList\";\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <TaskList />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}